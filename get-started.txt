https://learn.codeinstitute.net/courses/course-v1:CodeInstitute+FSD101_WTS+2023_Q3/courseware/16383559f48c4ae4a69e9e9149914729/d5d0251c90ab4dc5b7fc81bb7ac368d2/?child=first


INSTALL DJANGO:
pip3 install Django~=4.2.1
Check your installed Django Version:
django-admin version

Show installed packages in general:
pip3 list

ADD INSTALLED PACKAGES TO REQUIREMENTS.TXT
pip3 freeze --local > requirements.txt

CREATE DJANGO PROJECT:
django-admin startproject my_project .

RUN DJANGO SERVER:
python3 manage.py runserver

CREATE DJANGO APP:
python3 manage.py startapp hello_world

APP/views.py - ADD:
from django.http import HttpResponse

def index(request):
    return HttpResponse


PROJECT/urls.py - Add the created VIEW. 
from hello_world import views as index_views
urlpatterns = [path('', index_views.index, name='index')]

ADD APP to settings.py to connect the app to the project. 



IMPORTANT PROJECT FILES:

* settings.py 
    this file contains the project-wide settings, 
    such as installed apps and database connection information, among other things

* manage.py
     this file is in the root directory, above the project folder. 
     It is used to create apps, run our project and perform some database operations.



DEPLOYMENT PROCESS:
1. Create Heroku App (Dashboard)
2. Settings -> Config Vars :
Add the KEY "DISABLE_COLLECTSTATIC" with the VALUE of "1"
3. Install a production-ready webserver for Heroku.
    pip3 install gunicorn~=20.1
4. Add gunicorn==20.1.0 to the requirements.txt file
    pip3 freeze --local > requirements.txt
5. Create a file named "Procfile" at the root directory of the project (same directory as requirements.txt).
6. In the Procfile, declare this is a web process followed by the command to execute your Django project.
    web: gunicorn my_project.wsgi
This assumes your project is named my_project.
Note: gunicorn my_project.wsgi is the command heroku will use to start the server. 
It works similarly to python3 manage.py runserver.
7. Open the my_project/settings.py file and replace DEBUG=True with DEBUG=False.
8. Also, in settings.py we need to append the Heroku hostname to the ALLOWED_HOSTS list, in addition to the local host we added in the last lesson.
    ,'.herokuapp.com'
9. You can now git add the files you have modified, git commit them and push them to GitHub. 